# This program will ask user some questions and will generate a text file with an avatar with the attributes chosen
# earlier in the program.

# This module contains all the data used when asking a question.
# Also, "qIndex" stands for "question index".
def askQuestion(qIndex, QUESTIONS):
    global currentAnswer
    if qIndex in range(0, len(QUESTIONS)):
        print(QUESTIONS[qIndex])
        currentAnswer = str(input())
    else:
        print("An issue has occurred. The current question index (" + str(qIndex) + ") is not valid.")
    return


# This module checks to see if the answer provided is a valid answer.
# "qIndex" stands for "question index" and "cAnswer" stands for "current answer".
def validateAnswer(qIndex, cAnswer):
    global answers
    global validAnswer
    cAnswer = cAnswer.lower()
    if qIndex == 0:
        # This contains the possible answers for the "hair style" question.
        possibleAnswers = ["a", "b", "c", "d"]
    elif qIndex == 1:
        # This contains the possible answers for the "eye type" question.
        possibleAnswers = ["a", "b", "c", "d", "e", "f"]
    elif qIndex == 2:
        # This contains the possible answers for the "face shape" question.
        possibleAnswers = ["a", "b", "c", "d"]
    elif qIndex == 3:
        # This contains the possible answers for the "eyebrow type" question.
        possibleAnswers = ["a", "b", "c", "d"]
    elif qIndex == 4:
        # This forces the program to accept any name given as a valid response.
        validAnswer = True
        return
    else:
        possibleAnswers = False
    if possibleAnswers != False:
        for i in range(len(possibleAnswers)):
            if cAnswer == possibleAnswers[i]:
                validAnswer = True
            else:
                continue
    return


# This contains all data for how each hair style is displayed.
def setHairStyle(answers):
    global hairStyleContent
    if answers[0] == 'a':
        hairStyleContent = ['            ________________\n', '           /                \\\n',
                            '          /                  \\\n', '         /                    \\\n',
                            '        /                      \\\n', '        ————————————————————————\n']
    elif answers[0] == 'b':
        hairStyleContent = ['                 ______\n', '                /      \\\n', '                \\      /\n',
                            '                 \\    /\n', '                  \\  /\n',
                            '          ————————————————————\n']
    elif answers[0] == 'c':
        hairStyleContent = ['            ________________\n', '          /                 \\\n',
                            '         /         ^         \\\n', '        /         / \\         \\\n',
                            '   ^———          /   \\         ———^\n', '   \\____________/     \\___________/\n']
    elif answers[0] == 'd':
        hairStyleContent = ['                   /\\\n', '                  /  \\\n', '                 /    \\\n',
                            '                /      \\\n', '               /        \\\n',
                            '              /          \\\n', '             /            \\\n',
                            '            /              \\\n', '           /                \\\n',
                            '          /                  \\\n', '          ————————————————————\n']
    else:
        hairStyleContent = ['ERROR!!!\n']


# This contains all data for how each eye type is displayed.
def setEyeType(answers):
    global eyeTypeContent
    if answers[1] == 'a':
        eyeTypeContent = ['          |    👁️     👁️    |\n']
    elif answers[1] == 'b':
        eyeTypeContent = ['          |     •        •    |\n']
    elif answers[1] == 'c':
        eyeTypeContent = ['          |    🔥     🔥    |\n']
    elif answers[1] == 'd':
        eyeTypeContent = ['          |   ｡◕       ◕｡   |\n']
    elif answers[1] == 'e':
        eyeTypeContent = ['          |    ✕       ✕    |\n']
    elif answers[1] == 'f':
        eyeTypeContent = ['          |                  |\n']
    else:
        eyeTypeContent = ['ERROR!!!\n']


# This contains all data for how each face shape is displayed.
def setFaceShape(answers):
    global faceShapeContent
    if answers[2] == 'a':
        faceShapeContent = ['           \\                 /\n', '            \\               /\n',
                            '             \\             /\n', '              \\           /\n',
                            '               \\         /\n', '                \\       /\n',
                            '                 \\     /\n', '                  \\   /\n', '                   \\ /\n',
                            '                    v\n']
    elif answers[2] == 'b':
        faceShapeContent = ['          |                  |\n', '          |        👄       |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          ————————————————————\n']
    elif answers[2] == 'c':
        faceShapeContent = ['            \\               /\n', '              \\  ) 🫦 (  /\n',
                            '                \\ _____ /\n']
    elif answers[2] == 'd':
        faceShapeContent = ['          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '          |                  |\n',
                            '          |                  |\n', '           \\                /\n',
                            '            \\              /\n', '             \\            /\n',
                            '              \\          /\n', '                ————————\n']
    else:
        faceShapeContent = ['ERROR!!!\n']


# This contains all data for how each eyebrow type is displayed.
def setEyebrowType(answers):
    global eyebrowTypeContent
    if answers[3] == 'a':
        eyebrowTypeContent = ['          |     `      ´     |\n']
    elif answers[3] == 'b':
        eyebrowTypeContent = ['          |     ~      ~     |\n']
    elif answers[3] == 'c':
        eyebrowTypeContent = ['          |    __      __    |\n']
    elif answers[3] == 'd':
        eyebrowTypeContent = ['          |    ——      ⁀     |\n']
    else:
        eyebrowTypeContent = ['ERROR!!!\n']


# This module formats the inputted name so that it looks nice and pretty when output to a file.
def setAvatarName(answers):
    global avatarName
    avatarName = 'Name: ' + answers[4] + '\n'


def combineFaceData(answers, FILE_NAME):
    # Initialize variables in order to make management of each data set easier to understand.
    global hairStyleContent
    global eyeTypeContent
    global faceShapeContent
    global eyebrowTypeContent
    global avatarName
    fileContents = []
    setHairStyle(answers)
    setEyeType(answers)
    setFaceShape(answers)
    setEyebrowType(answers)
    setAvatarName(answers)
    fileContents.append(avatarName)
    for i in range(0, len(hairStyleContent)):
        fileContents.append(hairStyleContent[i])
    for i in range(0, len(eyebrowTypeContent)):
        fileContents.append(eyebrowTypeContent[i])
    for i in range(0, len(eyeTypeContent)):
        fileContents.append(eyeTypeContent[i])
    for i in range(0, len(faceShapeContent)):
        fileContents.append(faceShapeContent[i])
    print("Creating your avatar file...")
    with open(FILE_NAME, 'w', encoding='utf-8') as avatarFile:
        for item in fileContents:
            avatarFile.write("%s" % item)
    avatarFile.close()
    return


# Initialize variables.
FILE_NAME = "Generated Avatar - 1.0.txt"
QUESTIONS = ["Please select a hair style:\nA. Bowl Cut\nB. Top Knot Bun\nC. Middle Part\nD. Cone Head/Gnome",
             "Please select an eye type:\nA. Realistic\nB. Pinpoint\nC. Angry\nD. Cute\nE. Dead\nF. None",
             "Please select a face shape:\nA. Diamond\nB. Square\nC. Short\nD. LOOONG",
             "Please select an eyebrow type:\nA. Short\nB. Wavy\nC. Straight\nD. Concerned",
             "Give a name to your beautiful monstrosity!"]
answers = []  # This keeps track of all previous answers.
# Each answer's index will correspond to the index of the associated question.
currentQuestion = 0  # Keeps track of the current question index in the 'QUESTIONS' array.
currentAnswer = ''  # Holds data for the currently inputted answer.
validAnswer = False  # This detects whether the answer given is valid. Used mainly in the 'validateAnswer' function.
hairStyleContent = []  # This will eventually contain all data for how to display your chosen hairstyle.
eyeTypeContent = []  # This will eventually contain all data for how to display your chosen eye type.
faceShapeContent = []  # This will eventually contain all data for how to display your chosen face shape.
eyebrowTypeContent = []  # This will eventually contain all data for how to display your chosen eyebrow type.
avatarName = ''  # This will eventually contain data for how to format the name of your avatar.
fullAvatar = []  # This will eventually contain all data for how to output the avatar into a text file.

print("Welcome to the character creator!")

# This loop dynamically calls each question and validates the answer given.
for i in range(0, len(QUESTIONS)):
    currentQuestion = i
    validAnswer = False
    # The while loop is needed to ask the question again if a proper answer is not given.
    while validAnswer == False:
        askQuestion(currentQuestion, QUESTIONS)
        validateAnswer(currentQuestion, currentAnswer)
        if validAnswer == True:
            answers.append(currentAnswer.lower())
        else:
            print(
                "Your answer is invalid. Please type the letter of the attribute you wish to pick. (for example, type 'a')")

combineFaceData(answers, FILE_NAME)
